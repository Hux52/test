<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemyBomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_angle = point_direction(x, y, room_width/2, room_height/2);
image_angle = random(360);
//this is all ai stuff

thrustDir = 0;
thrust = false;
timeBetweenThrusts = 10;
timeSinceLastThrust = 0;
thrustTime = 0;

waitTime = 0;
timeSinceLastBomb = 0;
timeBetweenBombs = 1;
numberOfBombsPlaced = 0;

state = "Roaming";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timeSinceLastThrust += 1/room_speed;
timeSinceLastBomb += 1/room_speed;

if (state = "Roaming"){
    RoomWrap();
    
    if (timeSinceLastThrust &gt;= timeBetweenThrusts &amp;&amp; thrust = false){
        thrust = true;
    }
    
    if (thrust = true){
        image_index = 1;
        motion_add(image_angle, 0.04);
        thrustTime -= 1/room_speed;
        thrustDir = choose(-1,1);
        if (timeSinceLastBomb &gt; timeBetweenBombs){
            newBomb = instance_create(x,y,oBomb);
            newBomb.owner = self.id;
            numberOfBombsPlaced += 1;
            timeSinceLastBomb = 0;
        }
    }
    
    if (thrustTime &lt;= 0){
        thrust = false;
        thrustTime = random_range(0.5,1);
        timeBetweenThrusts = random_range(0.5,2)
        timeSinceLastThrust = 0;
        waitTime = random(0.5);
    }
    
    if (thrust = false){
        if (waitTime &lt;= 0){
        image_angle += 2 * thrustDir;
        image_index = 0;
        waitTime = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
