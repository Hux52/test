<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sShop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_speed = 0;
sell = false;
sold = false;

image_angle = point_direction(x, y, room_width/2, room_height/2);

//item to sell

eligibleItems = ds_list_create();

eligibleItems[|0] = "Life";
eligibleItems[|1] = "WeaponRapidFire";
eligibleItems[|2] = "WeaponChargeShot";

itemName = eligibleItems[|random(ds_list_size(eligibleItems))];

switch itemName {
    case "Life":
    item = oLifePickup;
    break;
    
    case "WeaponRapidFire":
    item = oWeaponRapidFirePickup;
    break;
    
    case "WeaponChargeShot":
    item = oWeaponChargeShotPickup;
    break;
}

//this is all ai stuff

timeUntilLeave = 0;
timeLeft = random_range(10,20);

thrustDir = 0;
thrust = false;
timeBetweenThrusts = 10;
timeSinceLastThrust = 0;
thrustTime = 0;

displayShop = false;

state = "Roaming";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(eligibleItems)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timeSinceLastThrust += 1/room_speed;
timeUntilLeave += 1/room_speed;

if (timeUntilLeave &gt;= timeLeft){
    state = "Leaving";
}

if (state = "Roaming"){
    RoomWrap();
    
    if (timeSinceLastThrust &gt;= timeBetweenThrusts &amp;&amp; thrust = false){
        thrust = true;
    }
    
    if (thrust = true){
        image_index = choose(1,2,3,4);
        motion_add(image_angle, 0.02)
        thrustTime -= 1/room_speed;
        thrustDir = choose(-1,1)
    }
    
    if (thrustTime &lt;= 0){
        thrust = false;
        thrustTime = random_range(0.5,2);
        timeBetweenThrusts = random_range(0.5,2)
        timeSinceLastThrust = 0;
    }
    
    if (thrust = false){
        image_angle += 2 * thrustDir;
        image_index = 0;
    }
    
} else if (state = "Leaving"){
    motion_add(image_angle, 0.02);
        image_index = choose(1,2,3,4);
    thrust = true;
    if (sold){
        displayShop = false;
    }
}

if (sell){
    newItem = instance_create(x,y,item);
    newItem.direction = random(360);
    newItem.speed = random(2);
    sell = false;
    sold = true;
    state = "Leaving";
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (displayShop = true){
    pt = lengthdir_y(20, 90);
    draw_sprite(object_get_sprite(item),
     object_get_name(item).image_index,
      x, y + point_distance(x,y,x,y+20)/2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
